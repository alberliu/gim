// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.29.3
// source: logic/device.ext.proto

package logicpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DeviceType int32

const (
	DeviceType_DT_DEFAULT DeviceType = 0
	DeviceType_DT_ANDROID DeviceType = 1
	DeviceType_DT_IOS     DeviceType = 2
	DeviceType_DT_WINDOWS DeviceType = 3
	DeviceType_DT_MACOS   DeviceType = 4
	DeviceType_DT_WEB     DeviceType = 5
)

// Enum value maps for DeviceType.
var (
	DeviceType_name = map[int32]string{
		0: "DT_DEFAULT",
		1: "DT_ANDROID",
		2: "DT_IOS",
		3: "DT_WINDOWS",
		4: "DT_MACOS",
		5: "DT_WEB",
	}
	DeviceType_value = map[string]int32{
		"DT_DEFAULT": 0,
		"DT_ANDROID": 1,
		"DT_IOS":     2,
		"DT_WINDOWS": 3,
		"DT_MACOS":   4,
		"DT_WEB":     5,
	}
)

func (x DeviceType) Enum() *DeviceType {
	p := new(DeviceType)
	*p = x
	return p
}

func (x DeviceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeviceType) Descriptor() protoreflect.EnumDescriptor {
	return file_logic_device_ext_proto_enumTypes[0].Descriptor()
}

func (DeviceType) Type() protoreflect.EnumType {
	return &file_logic_device_ext_proto_enumTypes[0]
}

func (x DeviceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeviceType.Descriptor instead.
func (DeviceType) EnumDescriptor() ([]byte, []int) {
	return file_logic_device_ext_proto_rawDescGZIP(), []int{0}
}

type RegisterDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type          DeviceType `protobuf:"varint,1,opt,name=type,proto3,enum=logic.DeviceType" json:"type,omitempty"`                 // 设备类型
	Brand         string     `protobuf:"bytes,2,opt,name=brand,proto3" json:"brand,omitempty"`                                      // 厂商
	Model         string     `protobuf:"bytes,3,opt,name=model,proto3" json:"model,omitempty"`                                      // 机型
	SystemVersion string     `protobuf:"bytes,4,opt,name=system_version,json=systemVersion,proto3" json:"system_version,omitempty"` // 系统版本
	SdkVersion    string     `protobuf:"bytes,5,opt,name=sdk_version,json=sdkVersion,proto3" json:"sdk_version,omitempty"`          // sdk版本号
}

func (x *RegisterDeviceRequest) Reset() {
	*x = RegisterDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_device_ext_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterDeviceRequest) ProtoMessage() {}

func (x *RegisterDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logic_device_ext_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterDeviceRequest.ProtoReflect.Descriptor instead.
func (*RegisterDeviceRequest) Descriptor() ([]byte, []int) {
	return file_logic_device_ext_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterDeviceRequest) GetType() DeviceType {
	if x != nil {
		return x.Type
	}
	return DeviceType_DT_DEFAULT
}

func (x *RegisterDeviceRequest) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

func (x *RegisterDeviceRequest) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *RegisterDeviceRequest) GetSystemVersion() string {
	if x != nil {
		return x.SystemVersion
	}
	return ""
}

func (x *RegisterDeviceRequest) GetSdkVersion() string {
	if x != nil {
		return x.SdkVersion
	}
	return ""
}

type RegisterDeviceReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId uint64 `protobuf:"varint,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"` // 设备id
}

func (x *RegisterDeviceReply) Reset() {
	*x = RegisterDeviceReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_device_ext_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterDeviceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterDeviceReply) ProtoMessage() {}

func (x *RegisterDeviceReply) ProtoReflect() protoreflect.Message {
	mi := &file_logic_device_ext_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterDeviceReply.ProtoReflect.Descriptor instead.
func (*RegisterDeviceReply) Descriptor() ([]byte, []int) {
	return file_logic_device_ext_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterDeviceReply) GetDeviceId() uint64 {
	if x != nil {
		return x.DeviceId
	}
	return 0
}

var File_logic_device_ext_proto protoreflect.FileDescriptor

var file_logic_device_ext_proto_rawDesc = []byte{
	0x0a, 0x16, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x65,
	0x78, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x22,
	0xb2, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x25, 0x0a, 0x0e,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x64, 0x6b, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x64, 0x6b, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x13, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x2a, 0x62, 0x0a, 0x0a, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x54, 0x5f, 0x44, 0x45, 0x46,
	0x41, 0x55, 0x4c, 0x54, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x54, 0x5f, 0x41, 0x4e, 0x44,
	0x52, 0x4f, 0x49, 0x44, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x54, 0x5f, 0x49, 0x4f, 0x53,
	0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x54, 0x5f, 0x57, 0x49, 0x4e, 0x44, 0x4f, 0x57, 0x53,
	0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x54, 0x5f, 0x4d, 0x41, 0x43, 0x4f, 0x53, 0x10, 0x04,
	0x12, 0x0a, 0x0a, 0x06, 0x44, 0x54, 0x5f, 0x57, 0x45, 0x42, 0x10, 0x05, 0x32, 0x5e, 0x0a, 0x10,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x45, 0x78, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x4a, 0x0a, 0x0e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x1c, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x1d, 0x5a, 0x1b,
	0x67, 0x69, 0x6d, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2f, 0x70, 0x62, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_logic_device_ext_proto_rawDescOnce sync.Once
	file_logic_device_ext_proto_rawDescData = file_logic_device_ext_proto_rawDesc
)

func file_logic_device_ext_proto_rawDescGZIP() []byte {
	file_logic_device_ext_proto_rawDescOnce.Do(func() {
		file_logic_device_ext_proto_rawDescData = protoimpl.X.CompressGZIP(file_logic_device_ext_proto_rawDescData)
	})
	return file_logic_device_ext_proto_rawDescData
}

var file_logic_device_ext_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_logic_device_ext_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_logic_device_ext_proto_goTypes = []interface{}{
	(DeviceType)(0),               // 0: logic.DeviceType
	(*RegisterDeviceRequest)(nil), // 1: logic.RegisterDeviceRequest
	(*RegisterDeviceReply)(nil),   // 2: logic.RegisterDeviceReply
}
var file_logic_device_ext_proto_depIdxs = []int32{
	0, // 0: logic.RegisterDeviceRequest.type:type_name -> logic.DeviceType
	1, // 1: logic.DeviceExtService.RegisterDevice:input_type -> logic.RegisterDeviceRequest
	2, // 2: logic.DeviceExtService.RegisterDevice:output_type -> logic.RegisterDeviceReply
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_logic_device_ext_proto_init() }
func file_logic_device_ext_proto_init() {
	if File_logic_device_ext_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_logic_device_ext_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_device_ext_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterDeviceReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_logic_device_ext_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_logic_device_ext_proto_goTypes,
		DependencyIndexes: file_logic_device_ext_proto_depIdxs,
		EnumInfos:         file_logic_device_ext_proto_enumTypes,
		MessageInfos:      file_logic_device_ext_proto_msgTypes,
	}.Build()
	File_logic_device_ext_proto = out.File
	file_logic_device_ext_proto_rawDesc = nil
	file_logic_device_ext_proto_goTypes = nil
	file_logic_device_ext_proto_depIdxs = nil
}
